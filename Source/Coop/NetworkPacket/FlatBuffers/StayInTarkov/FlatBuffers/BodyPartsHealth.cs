// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace StayInTarkov.FlatBuffers
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct BodyPartsHealth : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public BodyPartsHealth __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public StayInTarkov.FlatBuffers.BodyPartHealth Parts(int j) { return (new StayInTarkov.FlatBuffers.BodyPartHealth()).__assign(__p.bb_pos + 0 + j * 8, __p.bb); }

  public static Offset<StayInTarkov.FlatBuffers.BodyPartsHealth> CreateBodyPartsHealth(FlatBufferBuilder builder, float[] parts_Current, float[] parts_Maximum) {
    builder.Prep(4, 64);
    for (int _idx0 = 8; _idx0 > 0; _idx0--) {
      builder.Prep(4, 8);
      builder.PutFloat(parts_Maximum[_idx0-1]);
      builder.PutFloat(parts_Current[_idx0-1]);
    }
    return new Offset<StayInTarkov.FlatBuffers.BodyPartsHealth>(builder.Offset);
  }
}


}
