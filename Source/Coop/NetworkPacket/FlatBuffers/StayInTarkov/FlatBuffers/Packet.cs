// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace StayInTarkov.FlatBuffers
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Packet : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static Packet GetRootAsPacket(ByteBuffer _bb) { return GetRootAsPacket(_bb, new Packet()); }
  public static Packet GetRootAsPacket(ByteBuffer _bb, Packet obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyPacket(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, PacketVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Packet __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public StayInTarkov.FlatBuffers.AnyPacket PacketType { get { int o = __p.__offset(4); return o != 0 ? (StayInTarkov.FlatBuffers.AnyPacket)__p.bb.Get(o + __p.bb_pos) : StayInTarkov.FlatBuffers.AnyPacket.NONE; } }
  public TTable? Packet_<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(6); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public StayInTarkov.FlatBuffers.PlayerState Packet_Asplayer_state() { return Packet_<StayInTarkov.FlatBuffers.PlayerState>().Value; }

  public static Offset<StayInTarkov.FlatBuffers.Packet> CreatePacket(FlatBufferBuilder builder,
      StayInTarkov.FlatBuffers.AnyPacket packet_type = StayInTarkov.FlatBuffers.AnyPacket.NONE,
      int packetOffset = 0) {
    builder.StartTable(2);
    Packet.AddPacket(builder, packetOffset);
    Packet.AddPacketType(builder, packet_type);
    return Packet.EndPacket(builder);
  }

  public static void StartPacket(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddPacketType(FlatBufferBuilder builder, StayInTarkov.FlatBuffers.AnyPacket packetType) { builder.AddByte(0, (byte)packetType, 0); }
  public static void AddPacket(FlatBufferBuilder builder, int packetOffset) { builder.AddOffset(1, packetOffset, 0); }
  public static Offset<StayInTarkov.FlatBuffers.Packet> EndPacket(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<StayInTarkov.FlatBuffers.Packet>(o);
  }
  public static void FinishPacketBuffer(FlatBufferBuilder builder, Offset<StayInTarkov.FlatBuffers.Packet> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedPacketBuffer(FlatBufferBuilder builder, Offset<StayInTarkov.FlatBuffers.Packet> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class PacketVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*PacketType*/, 1 /*StayInTarkov.FlatBuffers.AnyPacket*/, 1, false)
      // && verifier.VerifyUnion(tablePos, 4, 6 /*Packet*/, StayInTarkov.FlatBuffers.AnyPacketVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
