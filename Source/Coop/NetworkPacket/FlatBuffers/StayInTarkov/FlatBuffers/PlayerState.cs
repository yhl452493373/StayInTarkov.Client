// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace StayInTarkov.FlatBuffers
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct PlayerState : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static PlayerState GetRootAsPlayerState(ByteBuffer _bb) { return GetRootAsPlayerState(_bb, new PlayerState()); }
  public static PlayerState GetRootAsPlayerState(ByteBuffer _bb, PlayerState obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PlayerState __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ProfileId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetProfileIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetProfileIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetProfileIdArray() { return __p.__vector_as_array<byte>(4); }
  public StayInTarkov.FlatBuffers.EPlayerState State { get { int o = __p.__offset(6); return o != 0 ? (StayInTarkov.FlatBuffers.EPlayerState)__p.bb.Get(o + __p.bb_pos) : StayInTarkov.FlatBuffers.EPlayerState.None; } }
  public float Tilt { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public sbyte Step { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public byte AnimatorStateIndex { get { int o = __p.__offset(12); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }
  public float CharacterMovementSpeed { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float PoseLevel { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool IsProne { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsSprinting { get { int o = __p.__offset(20); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool HandsExhausted { get { int o = __p.__offset(22); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool OxygenExhausted { get { int o = __p.__offset(24); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool StaminaExhausted { get { int o = __p.__offset(26); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public StayInTarkov.FlatBuffers.Vec3? Position { get { int o = __p.__offset(28); return o != 0 ? (StayInTarkov.FlatBuffers.Vec3?)(new StayInTarkov.FlatBuffers.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public StayInTarkov.FlatBuffers.Vec2? Rotation { get { int o = __p.__offset(30); return o != 0 ? (StayInTarkov.FlatBuffers.Vec2?)(new StayInTarkov.FlatBuffers.Vec2()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public StayInTarkov.FlatBuffers.Vec3? HeadRotation { get { int o = __p.__offset(32); return o != 0 ? (StayInTarkov.FlatBuffers.Vec3?)(new StayInTarkov.FlatBuffers.Vec3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public StayInTarkov.FlatBuffers.Vec2? MovementDirection { get { int o = __p.__offset(34); return o != 0 ? (StayInTarkov.FlatBuffers.Vec2?)(new StayInTarkov.FlatBuffers.Vec2()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public StayInTarkov.FlatBuffers.Vec2? InputDirection { get { int o = __p.__offset(36); return o != 0 ? (StayInTarkov.FlatBuffers.Vec2?)(new StayInTarkov.FlatBuffers.Vec2()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public sbyte Blindfire { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetSbyte(o + __p.bb_pos) : (sbyte)0; } }
  public float LinearSpeed { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool LeftStance { get { int o = __p.__offset(42); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool IsAlive { get { int o = __p.__offset(44); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public float Energy { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Hydration { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Radiation { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Poison { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public StayInTarkov.FlatBuffers.BodyPartsHealth? BodyPartsHealth { get { int o = __p.__offset(54); return o != 0 ? (StayInTarkov.FlatBuffers.BodyPartsHealth?)(new StayInTarkov.FlatBuffers.BodyPartsHealth()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartPlayerState(FlatBufferBuilder builder) { builder.StartTable(26); }
  public static void AddProfileId(FlatBufferBuilder builder, StringOffset profileIdOffset) { builder.AddOffset(0, profileIdOffset.Value, 0); }
  public static void AddState(FlatBufferBuilder builder, StayInTarkov.FlatBuffers.EPlayerState state) { builder.AddByte(1, (byte)state, 0); }
  public static void AddTilt(FlatBufferBuilder builder, float tilt) { builder.AddFloat(2, tilt, 0.0f); }
  public static void AddStep(FlatBufferBuilder builder, sbyte step) { builder.AddSbyte(3, step, 0); }
  public static void AddAnimatorStateIndex(FlatBufferBuilder builder, byte animatorStateIndex) { builder.AddByte(4, animatorStateIndex, 0); }
  public static void AddCharacterMovementSpeed(FlatBufferBuilder builder, float characterMovementSpeed) { builder.AddFloat(5, characterMovementSpeed, 0.0f); }
  public static void AddPoseLevel(FlatBufferBuilder builder, float poseLevel) { builder.AddFloat(6, poseLevel, 0.0f); }
  public static void AddIsProne(FlatBufferBuilder builder, bool isProne) { builder.AddBool(7, isProne, false); }
  public static void AddIsSprinting(FlatBufferBuilder builder, bool isSprinting) { builder.AddBool(8, isSprinting, false); }
  public static void AddHandsExhausted(FlatBufferBuilder builder, bool handsExhausted) { builder.AddBool(9, handsExhausted, false); }
  public static void AddOxygenExhausted(FlatBufferBuilder builder, bool oxygenExhausted) { builder.AddBool(10, oxygenExhausted, false); }
  public static void AddStaminaExhausted(FlatBufferBuilder builder, bool staminaExhausted) { builder.AddBool(11, staminaExhausted, false); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<StayInTarkov.FlatBuffers.Vec3> positionOffset) { builder.AddStruct(12, positionOffset.Value, 0); }
  public static void AddRotation(FlatBufferBuilder builder, Offset<StayInTarkov.FlatBuffers.Vec2> rotationOffset) { builder.AddStruct(13, rotationOffset.Value, 0); }
  public static void AddHeadRotation(FlatBufferBuilder builder, Offset<StayInTarkov.FlatBuffers.Vec3> headRotationOffset) { builder.AddStruct(14, headRotationOffset.Value, 0); }
  public static void AddMovementDirection(FlatBufferBuilder builder, Offset<StayInTarkov.FlatBuffers.Vec2> movementDirectionOffset) { builder.AddStruct(15, movementDirectionOffset.Value, 0); }
  public static void AddInputDirection(FlatBufferBuilder builder, Offset<StayInTarkov.FlatBuffers.Vec2> inputDirectionOffset) { builder.AddStruct(16, inputDirectionOffset.Value, 0); }
  public static void AddBlindfire(FlatBufferBuilder builder, sbyte blindfire) { builder.AddSbyte(17, blindfire, 0); }
  public static void AddLinearSpeed(FlatBufferBuilder builder, float linearSpeed) { builder.AddFloat(18, linearSpeed, 0.0f); }
  public static void AddLeftStance(FlatBufferBuilder builder, bool leftStance) { builder.AddBool(19, leftStance, false); }
  public static void AddIsAlive(FlatBufferBuilder builder, bool isAlive) { builder.AddBool(20, isAlive, false); }
  public static void AddEnergy(FlatBufferBuilder builder, float energy) { builder.AddFloat(21, energy, 0.0f); }
  public static void AddHydration(FlatBufferBuilder builder, float hydration) { builder.AddFloat(22, hydration, 0.0f); }
  public static void AddRadiation(FlatBufferBuilder builder, float radiation) { builder.AddFloat(23, radiation, 0.0f); }
  public static void AddPoison(FlatBufferBuilder builder, float poison) { builder.AddFloat(24, poison, 0.0f); }
  public static void AddBodyPartsHealth(FlatBufferBuilder builder, Offset<StayInTarkov.FlatBuffers.BodyPartsHealth> bodyPartsHealthOffset) { builder.AddStruct(25, bodyPartsHealthOffset.Value, 0); }
  public static Offset<StayInTarkov.FlatBuffers.PlayerState> EndPlayerState(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<StayInTarkov.FlatBuffers.PlayerState>(o);
  }
}


static public class PlayerStateVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*ProfileId*/, false)
      && verifier.VerifyField(tablePos, 6 /*State*/, 1 /*StayInTarkov.FlatBuffers.EPlayerState*/, 1, false)
      && verifier.VerifyField(tablePos, 8 /*Tilt*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*Step*/, 1 /*sbyte*/, 1, false)
      && verifier.VerifyField(tablePos, 12 /*AnimatorStateIndex*/, 1 /*byte*/, 1, false)
      && verifier.VerifyField(tablePos, 14 /*CharacterMovementSpeed*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*PoseLevel*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*IsProne*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 20 /*IsSprinting*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 22 /*HandsExhausted*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 24 /*OxygenExhausted*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 26 /*StaminaExhausted*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 28 /*Position*/, 12 /*StayInTarkov.FlatBuffers.Vec3*/, 4, false)
      && verifier.VerifyField(tablePos, 30 /*Rotation*/, 8 /*StayInTarkov.FlatBuffers.Vec2*/, 4, false)
      && verifier.VerifyField(tablePos, 32 /*HeadRotation*/, 12 /*StayInTarkov.FlatBuffers.Vec3*/, 4, false)
      && verifier.VerifyField(tablePos, 34 /*MovementDirection*/, 8 /*StayInTarkov.FlatBuffers.Vec2*/, 4, false)
      && verifier.VerifyField(tablePos, 36 /*InputDirection*/, 8 /*StayInTarkov.FlatBuffers.Vec2*/, 4, false)
      && verifier.VerifyField(tablePos, 38 /*Blindfire*/, 1 /*sbyte*/, 1, false)
      && verifier.VerifyField(tablePos, 40 /*LinearSpeed*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 42 /*LeftStance*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 44 /*IsAlive*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 46 /*Energy*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 48 /*Hydration*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 50 /*Radiation*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 52 /*Poison*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 54 /*BodyPartsHealth*/, 64 /*StayInTarkov.FlatBuffers.BodyPartsHealth*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
